{"version":3,"sources":["reducer.js","Cell.js","Tictactoe.js","index.js"],"names":["counter","state","action","undefined","count","type","Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clicked","click","bind","assertThisInitialized","setState","onClick","index","console","log","react_default","a","createElement","className","has_winner","entry","PureComponent","Tictactoe","currentPlayer","cells","Array","winner_combinations","buttonClick","hasWinner","reset","item","ccells","includes","Xs","filter","x","Os","result","length","helper","str","sub","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","c","value","indexOf","err","return","set","X","O","i","push","Xstr","toString","split","join","Ostr","winner","src_Cell","key","Fragment","Component","store","createStore","ReactDOM","render","es","src_Tictactoe","document","getElementById"],"mappings":"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","file":"static/js/main.1c71f689.chunk.js","sourcesContent":["function counter(state, action) {\n  if (state === undefined) return { count: 0 };\n  var count = state.count;\n  switch (action.type) {\n    case \"inc\":\n      return { count: count + 1 };\n    case \"dec\":\n      return { count: count - 1 };\n    default:\n      return state;\n  }\n}\nexport default counter;\n","import React, { PureComponent } from \"react\";\nimport \"./css/tictactoe.css\";\n\nclass Cell extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false\n    };\n    this.click = this.click.bind(this);\n  }\n  click() {\n    this.setState({\n      clicked: true\n    });\n    //    console.log(this.props.index);\n    this.props.onClick(this.props.index);\n  }\n\n  render() {\n    console.log(\"Rendering: Cell\", this.props.index);\n    return (\n      <button\n        onClick={this.click}\n        className={\n          this.state.clicked === true || this.props.has_winner === true\n            ? \"clicked\"\n            : \"\"\n        }\n      >\n        {this.props.entry}\n      </button>\n    );\n  }\n}\n\nexport default Cell;\n","import React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./css/tictactoe.css\";\nclass Tictactoe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPlayer: \"X\",\n      cells: new Array(9),\n      winner_combinations: [\n        \"012\",\n        \"345\",\n        \"678\",\n        \"036\",\n        \"147\",\n        \"258\",\n        \"048\",\n        \"246\"\n      ]\n    };\n    this.buttonClick = this.buttonClick.bind(this);\n    this.hasWinner = this.hasWinner.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  reset() {\n    this.setState({\n      currentPlayer: \"X\",\n      cells: new Array(9)\n    });\n  }\n  buttonClick(item) {\n    let ccells = this.state.cells;\n    ccells[item] = this.state.currentPlayer;\n    console.log(ccells);\n    if (!this.hasWinner())\n      if (ccells.includes(undefined))\n        this.setState({\n          currentPlayer: this.state.currentPlayer === \"X\" ? \"O\" : \"X\",\n          cells: ccells\n        });\n      else\n        this.setState({\n          currentPlayer: \"Noone won\"\n        });\n    else {\n      this.setState({\n        currentPlayer: this.state.currentPlayer + \" won\"\n      });\n    }\n  }\n  hasWinner() {\n    let Xs = this.state.cells.filter(x => x === \"X\");\n    let Os = this.state.cells.filter(x => x === \"O\");\n    let result = false;\n    if (Xs.length > 2 || Os.length > 2) {\n      console.log(\"winner detection running\");\n      const set = {\n        X: [],\n        O: [],\n        undefined: []\n      };\n      for (let i = 0; i < this.state.cells.length; i++) {\n        const tmp = this.state.cells[i];\n        set[tmp].push(i);\n      }\n      let Xstr = set[\"X\"]\n        .toString()\n        .split(\",\")\n        .join(\"\");\n      let Ostr = set[\"O\"]\n        .toString()\n        .split(\",\")\n        .join(\"\");\n      console.log(Xstr, Ostr);\n      let winner = null;\n      for (let i = 0; i < this.state.winner_combinations.length; i++) {\n        const item = this.state.winner_combinations[i];\n        if (helper(Xstr, item)) {\n          winner = \"X\";\n          break;\n        } else if (helper(Ostr, item)) {\n          winner = \"Y\";\n          break;\n        }\n      }\n      console.log(\"winner\", winner);\n      if (winner != null) {\n        result = true;\n      }\n      function helper(str, sub) {\n        let count = 0;\n        for (let c of sub) if (str.indexOf(c) != -1) count++;\n        return count === sub.length;\n      }\n    }\n    return result;\n  }\n  render() {\n    console.log(\"Rendering: Tictactoe\");\n    let result = [];\n    for (let i = 0; i < 9; i++) {\n      result.push(\n        <div className=\"cell\">\n          <Cell\n            onClick={this.buttonClick}\n            entry={this.state.cells[i]}\n            index={i}\n            key={i}\n            has_winner={\n              this.state.currentPlayer.indexOf(\"won\") !== -1 ? true : false\n            }\n          />\n        </div>\n      );\n      if ((i + 1) % 3 === 0) result.push(<div className=\"clearfix\" />);\n    }\n\n    return (\n      <>\n        <div className=\"header\">\n          <span onClick={this.reset}>Player: {this.state.currentPlayer}</span>\n        </div>\n        <div className=\"row\">{result}</div>\n      </>\n    );\n  }\n}\n\nexport default Tictactoe;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport counter from \"./reducer\";\nimport Tictactoe from \"./Tictactoe\";\nvar store = createStore(counter);\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <Tictactoe />\n    </Provider>\n  </>,\n  document.getElementById(\"container\")\n);\n"],"sourceRoot":""}